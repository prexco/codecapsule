#!/usr/bin/env bash
## CodeCapsule - Manage multiple repositories as a single project
##
## Manage multiple git repositories quicker and easier, as iff they were one single project.
# Similar to "repo" that is used to manage the Android open source project; the main difference is that this one is a lighter download, and it only requires bash (shell).
# This essentially works as a bootstrapper for codecapsule-util, which is automatically installed within an initialised directory.
##
## USAGE:
##     codecapsule <COMMAND> [options]
##

set -eEu -o pipefail       # setting the environment
shopt -s extdebug          # setting debug

IFS=$'\n\t'                # setting IFS to default

ProgramName=codecapsule
ProgramVersion=2
FlowDir=.codecapsule
RootDir=$PWD
UtilRepo=https://github.com/prexco/codecapsule-util.git

ErrorNoFlowDirFound()
{
   cat >&2 <<EOF
A folder must be initialised first.

Use:  ${ProgName} init URL

More help available: ${ProgName} help
EOF
   return 1
}

FindFlowDir()
{
   while [[ -n "$RootDir" ]]; do
      if [[ -d "$RootDir/$FlowDir" ]]; then
         FlowDir="$RootDir/$FlowDir"
         return 0
      fi
      RootDir=${RootDir%/*}
    done

   # $RootDir is allowed to be in / ; although highly discouraged
   if [[ -d "$RootDir/$FlowDir" ]]; then
      FlowDir="$RootDir/$FlowDir"
      return 0
   fi
   return 1
}

LoadUtil()
{
   for F in "$FlowDir/codecapsule-util/lib/"* "$FlowDir/codecapsule-util/commands/"*; do
       if [[ -f "$F" ]] && [[ "$(head -n 1 "$F")" == "#!"* ]]; then
         . "$F"
       fi
   done
   CapsuleFileLoad
}

cmdHelp()
{
   grep "^##" "$0" | cut -b 4-
   echo "Commands:"
   echo ""

   if ! commandHelp 2>/dev/null; then
      cat << EOF
   help             Show this help message. A more comprehensive help message
                    will be displayed after you initialise (init) a repository.

   init URL [DIR]   Initialise a group of repositories. The URL is the location
                    of a git repository and DIR is where you want it to go.
                    (By default, the DIR will be inferred from the URL).
EOF
   fi
}

cmdInit()
{
   local dest files

   if [[ -z "${1-}" ]]; then
      echo "An URL must be specified" >&2
      return 1
   fi

   if [[ -z "${2-}" ]]; then
      dest=${1-}
      dest=${dest%%#*}
      dest=${dest##*/}
      dest=${dest%.git}
   else
      dest=$2
   fi

   if [[ -d "$dest" ]]; then
      if [[ -e "$dest/.codecapsule" ]]; then
         echo "$dest is already an initialised codecapsule folder." >&2
         exit 1
       fi

      # Try to match against '*', '.*' and '..*' where it does not match
      # against the directories '.' nor '..' .
      files=("$dest"/* "$dest"/.[^.]* "$dest"/..?*)

      if [[ -e "${files[0]}" ]] || [[ -e "${files[1]}" ]] || [[ -e "${files[2]}" ]]; then
         echo "$dest is not an empty folder." >&2
         exit 1
      fi
   else
      mkdir "$dest"
   fi

   cd "$dest"

   CapsuleStatus "Creating meta dir: $FlowDir"
   mkdir -p "$FlowDir"

   CapsuleStatus "Cloning codecapsule-util: $1"
   git clone "$UtilRepo" "$FlowDir/codecapsule-util"

   CapsuleStatus "Cloning the capsule file: $1"
   git clone "$1" "$FlowDir/capsule"

   CapsuleStatus "Initialisation complete."
   echo "To get all the code, please run: $ProgramName sync"
}

CapsuleStatus()
{
   echo "[${ProgramName}] ""$@"
}

if [[ -z "${1-}" ]] || [[ "$1" == "help" ]]; then
   if ! FindFlowDir; then
      cmdHelp
      exit
   fi
   LoadUtil
   cmdHelp
   exit
fi

if [[ "$1" == "init" ]]; then
   shift
   cmdInit "$@"
   exit
fi

if ! FindFlowDir; then
   ErrorNoFlowDirFound
   exit
fi

cd "$RootDir"
LoadUtil
commandRun "$@"
